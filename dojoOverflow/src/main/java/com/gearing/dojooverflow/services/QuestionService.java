package com.gearing.dojooverflow.services;

import java.util.Arrays;
import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.validation.BindingResult;

import com.gearing.dojooverflow.models.Question;
import com.gearing.dojooverflow.repositories.QuestionRepository;

@Service
public class QuestionService {
	@Autowired
	private QuestionRepository questionRepo;
	@Autowired
	private TagService tagServ;
	
	public List<Question> getAllQuestions() {
		return questionRepo.findAll();
	}
	
	public Optional<Question> getQuestionById(Long id) {
		return questionRepo.findById(id);
	}
	
	public Question submit(Question question, BindingResult result) {
		// Splice input by comma delimiter and remove whitespace
		List<String> tagList = tagServ.splitAndTrimTags(question.getTagInput());
		
		// Remove duplicates from the list so we don't try to add it twice. Also makes the list length more accurate
		tagList = tagList.stream().distinct().collect(Collectors.toList());
		
		if(tagList.size() < 1 || tagList.size() > 3)
			result.rejectValue("tagInput", "error.tagQuantity", "There must be one to three tags!");
		if(result.hasErrors())
			return null;
		
		// Saving the question so it can be accessed to add the tags to it
		questionRepo.save(question);
		
		// Creates any new tags generated by the tagList
		tagServ.createTags(tagList);
		// Adds all listed tags to the question
		tagServ.addTags(tagList, question.getId());
		
		return question;
	}
}
